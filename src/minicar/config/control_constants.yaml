control_constants:
  update_rate: 100.0 # [Hz]   publish motor torques with this frequency. every 10ms = 100Hz

  # controller_type:        # "2D","3D","drive", this value is set through launch file!
  # motors_controller_type: # "PositionJointInterface", "VelocityJointInterface", "EffortJointInterface" this value is set through launch file.

  #Control2D Gains: (currently without odometry)
  gains_2D_Kxz: [  -0.38,  -28.6,  -0.0, -0.55]  #x=[phix thetax dphix dthetax] #negative values here! motors are turned internally!
  gains_2D_Kyz: [  -0.38,  -28.6,  -0.0, -0.55]  #x=[phiy thetay dphiy dthetay]
  Ka: 1
  k1: 1
  k2: 1
  k3: 1
  k6: 1
  gy: 1
  Mb: 0.6
  Mw: 0.033596
  ixx: 0.073125
  iyy: 0.289125
  izz: 0.36
  cz: 0.074
  Rw: 0.035
  Ks1: 1
  Ks2: 1
  Tv: 1 #[sec]

  #Geometry constants:

  beta:  0.0           #[rad]   0°    winkel von der imu_x zu Rad 1. Räder gegen den Uhrzeigersinn numeriert!

  #Control3D Gains:


#Notes: White Ball Single Wheel Config:
#alpha: 0.78539816339 #[rad]   45°
#beta: -1.0471975512  #[rad]   60°

#Notes: Brown Ball Double Wheel Config:
#alpha: 0.78539816339 #[rad]   45°
#beta:  0.0  #[rad]   0°

# Notes on the Control2D Gains:
# best results with: [ 0.0,  -28,  0.0, -1]
# according to matlab we need: [ 0.0,  -18.73,  0.0, -4.43]
# The gains_2D_Kxz and the gains_2D_Kyz should be identically if the center of mass is in the middle of the robot.
